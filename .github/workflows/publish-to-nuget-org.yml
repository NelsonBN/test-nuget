name: 'Publish to nuGet.org'



on:
  workflow_dispatch: # To can dispatch manually
  push:
    branches:
      - main
    paths:
      - "src/**" # Only run when exists changes in source code



env:
  SDK_VERSION: '6.0.301'
  PACKAGE_PATH: ./src/**/*.nupkg
  NUGET_SERVER: https://api.nuget.org/v3/index.json



jobs:

#  test-project:
#    name: "Test nuget"
#    runs-on: 'ubuntu-latest'

#    steps:
#    - name: "Checkout"
#      uses: actions/checkout@v3

#    - name: "Setup .NET"
#      uses: actions/setup-dotnet@v2
#      with:
#        dotnet-version: ${{ env.SDK_VERSION }}

#    - name: "Restore dependencies"
#      run: dotnet restore

#    - name: "Build"
#      run: dotnet build --configuration Release --no-restore

#    - name: "Test"
#      run: dotnet test --configuration Release --no-build --verbosity normal



  preparar-release:
    name: "Preparar release"
    runs-on: 'ubuntu-latest'
#    needs: [test-project]

    steps:
    - name: "Checkout"
      uses: actions/checkout@v3

    - name: 'Setup Node.js'
      uses: actions/setup-node@v2
      with:
        node-version: 'lts/*'
    
    - name: 'Install dependencies'
      run: |
        rm -rf package-lock.json node_modules
        npm install
        npm ci
    
    - name: 'Run semantic-release'
      id: 'semantic-release'
      run: npx semantic-release --no-ci
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 'Show next version'
      run: echo ${{ steps.semantic-release.outputs.nextRelease.version }}

    - name: 'Update nuGet version'
      uses: roryprimrose/set-vs-sdk-project-version@v1
      with:
        projectFilter: 'src/**.csproj'
        version: ${{ steps.semantic-release.outputs.nextRelease.version }}



  deploy-nuget:
    name: "Deploy nuget"
    runs-on: 'ubuntu-latest'
    needs: [preparar-release]

    steps:
    - name: "Checkout"
      uses: actions/checkout@v3

    - name: "Setup .NET"
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: ${{ env.SDK_VERSION }}

    - name: "Restore dependencies"
      run: dotnet restore

    - name: "Build"
      run: dotnet build --configuration Release --no-restore

    - name: "Test"
      run: dotnet test --configuration Release --no-build --verbosity normal

    - name: "Pack"
      run: dotnet pack --configuration Release --no-build

    - name: "Publish nuget"
      run: dotnet nuget push ${{ env.PACKAGE_PATH }} --api-key ${{ secrets.NUGET_TOKEN }} --source ${{ env.NUGET_SERVER }} --skip-duplicate
